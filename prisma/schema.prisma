generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextIndex", "fullTextSearch"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model applicant {
  Id         String       @id
  Name       String
  healthfood healthfood[]
}

model benefits {
  Id        String      @id
  Name      String
  hf_and_bf hf_and_bf[]
}

model certification {
  Id         String       @id
  Name       String
  healthfood healthfood[]
}

model comment {
  UserId     String
  HFId       String
  content    String
  point      Float
  healthfood healthfood @relation(fields: [HFId], references: [Id], map: "Comment_HFId_fkey")
  user       user       @relation(fields: [UserId], references: [Id], map: "Comment_UserId_fkey")

  @@id([UserId, HFId])
  @@index([HFId], map: "Comment_HFId_fkey")
}

model favourite {
  UserId     String
  HFId       String
  healthfood healthfood @relation(fields: [HFId], references: [Id], map: "Favourite_HFId_fkey")
  user       user       @relation(fields: [UserId], references: [Id], map: "Favourite_UserId_fkey")

  @@id([UserId, HFId])
  @@index([HFId], map: "Favourite_HFId_fkey")
}

model healthfood {
  Id                String              @id
  Name              String
  AcessDate         DateTime
  Claims            String
  Warning           String
  Precautions       String
  Website           String
  ApplicantId       String
  CFId              String
  CurCommentNum     Int?                @default(0)
  CurPoint          Float?              @default(0) @db.Float
  comment           comment[]
  favourite         favourite[]
  applicant         applicant           @relation(fields: [ApplicantId], references: [Id], map: "HealthFood_ApplicantId_fkey")
  certification     certification       @relation(fields: [CFId], references: [Id], map: "HealthFood_CFId_fkey")
  hf_and_bf         hf_and_bf[]
  hf_and_ingredient hf_and_ingredient[]

  @@index([ApplicantId], map: "HealthFood_ApplicantId_fkey")
  @@index([CFId], map: "HealthFood_CFId_fkey")
}

model hf_and_bf {
  HFId       String
  BFId       String
  benefits   benefits   @relation(fields: [BFId], references: [Id], map: "HF_and_BF_BFId_fkey")
  healthfood healthfood @relation(fields: [HFId], references: [Id], map: "HF_and_BF_HFId_fkey")

  @@id([HFId, BFId])
  @@index([BFId], map: "HF_and_BF_BFId_fkey")
}

model hf_and_ingredient {
  HFId       String
  IGId       String
  healthfood healthfood @relation(fields: [HFId], references: [Id], map: "HF_and_Ingredient_HFId_fkey")
  ingredient ingredient @relation(fields: [IGId], references: [Id], map: "HF_and_Ingredient_IGId_fkey")

  @@id([HFId, IGId])
  @@index([IGId], map: "HF_and_Ingredient_IGId_fkey")
}

model ingredient {
  Id                String              @id
  Name              String?
  EnglishName       String?
  hf_and_ingredient hf_and_ingredient[]
}

model user {
  Id             String      @id
  Email          String      @unique(map: "User_Email_key")
  Password       String
  isSuperAccount Boolean     @default(false)
  Name           String      @unique(map: "Name")
  Age            Int
  Gender         Boolean
  comment        comment[]
  favourite      favourite[]
}
