datasource db {
  provider = "mysql"
  // url      = env("DATABASE_URL")
  url      = env("LOCAL_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

//使用者
model User {
  Id             String          @id
  Email          String          @unique
  Password       String
  isSuperAccount Boolean         @default(false)
  Name           String          @unique
  Birthday       DateTime
  Gender         Boolean         @default(true)
  Favourite      Favourite[]
  Comment        Comment[]
  RecommendList  RecommendList[]
}

//我的最愛
model Favourite {
  UserId String
  HFId   String
  HF     HealthFood @relation(fields: [HFId], references: [Id], onDelete: Cascade, onUpdate: Cascade)
  User   User       @relation(fields: [UserId], references: [Id])

  @@id([UserId, HFId])
}

//評論
model Comment {
  UserId     String
  HFId       String
  content    String
  point      Int
  modifyTime DateTime
  HF         HealthFood @relation(fields: [HFId], references: [Id], onDelete: Cascade)
  User       User       @relation(fields: [UserId], references: [Id])

  @@id([UserId, HFId])
}

//健康食品
model HealthFood {
  Id                   String                 @id
  Name                 String
  AcessDate            DateTime
  CFId                 String
  CurCommentNum        Int
  CurPoint             Float
  Claims               String
  Warning              String
  Precautions          String
  Website              String
  ApplicantId          String
  ImgUrl               String?
  Applicant            Applicant              @relation(fields: [ApplicantId], references: [Id])
  Favourite            Favourite[]
  Comment              Comment[]
  HF_and_Ingredient    HF_and_Ingredient[]
  HF_and_BF            HF_and_BF[]
  CF                   Certification          @relation(fields: [CFId], references: [Id])
  RecommendList_and_HF RecommendList_and_HF[]
}

//申請商

model Applicant {
  Id   String @id
  Name String

  HealthFood HealthFood[]
}

model Ingredient {
  Id                String              @id
  Name              String?
  EnglishName       String?
  HF_and_Ingredient HF_and_Ingredient[]
}

model HF_and_Ingredient {
  HFId String
  IGId String

  HF HealthFood @relation(fields: [HFId], references: [Id], onDelete: Cascade)
  IG Ingredient @relation(fields: [IGId], references: [Id], onDelete: Cascade)

  @@id([HFId, IGId])
}

model Benefits {
  Id        String      @id
  Name      String
  HF_and_BF HF_and_BF[]
}

model HF_and_BF {
  HFId String
  BFId String
  HF   HealthFood @relation(fields: [HFId], references: [Id], onDelete: Cascade)
  BF   Benefits   @relation(fields: [BFId], references: [Id], onDelete: Cascade)

  @@id([HFId, BFId])
}

model Certification {
  Id         String       @id
  Name       String
  HealthFood HealthFood[]
}

//推薦清單
model RecommendList {
  Id                   String                 @id
  Name                 String
  IsPublic             Boolean                @default(false)
  UserId               String
  User                 User                   @relation(fields: [UserId], references: [Id])
  RecommendList_and_HF RecommendList_and_HF[]
}

//推薦清單和健康食品的關聯表
model RecommendList_and_HF {
  RLId String
  HFId String
  RL   RecommendList @relation(fields: [RLId], references: [Id], onDelete: Cascade)
  HF   HealthFood    @relation(fields: [HFId], references: [Id], onDelete: Cascade)

  @@id([RLId, HFId])
}
